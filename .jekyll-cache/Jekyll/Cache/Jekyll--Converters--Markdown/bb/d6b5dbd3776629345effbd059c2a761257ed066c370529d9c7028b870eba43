I"`T<h3 id="第三方库安装">第三方库安装</h3>

<p>安装 djangorestframework、drf_yasg</p>

<blockquote>
  <p>drf_yasg主要为了能自动生成文档</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>pip3 <span class="nb">install </span>djangorestframework
pip3 <span class="nb">install </span>drf_yasg
</pre></td></tr></tbody></table></code></pre></div></div>

<p>在 settings.py 文件中将 rest_framework 加入 INSTALLED_APPS</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">[</span>
    <span class="c1"># my apps here
</span>    <span class="p">...</span>
    <span class="s">'drf_yasg'</span><span class="p">,</span>
    <span class="s">'rest_framework'</span><span class="p">,</span>
    <span class="p">...</span>
<span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="新建模型">新建模型</h3>

<p>新建一个app</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>python3 manage.py startapp build_info
</pre></td></tr></tbody></table></code></pre></div></div>

<p>把新建的app加入 INSTALLED_APPS</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">[</span>
    <span class="c1"># my apps here
</span>    <span class="p">...</span>
    <span class="s">'build_info'</span><span class="p">,</span>
    <span class="s">'rest_framework'</span><span class="p">,</span>
  	<span class="p">...</span>
<span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>在 build_info/models.py中新建一个模型</p>

<blockquote>
  <p>因为我已经在数据库建了表，这里只是用Django ORM做映射，所以在meta信息里添加 managed = False ，添加后并不在数据库中实际生成表</p>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="rouge-code"><pre><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="c1"># Create your models here.
</span>

<span class="k">class</span> <span class="nc">BuildJob</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="s">''' Jenkins构建任务记录 '''</span>
    <span class="n">project</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">255</span><span class="p">)</span>
    <span class="n">timestamp</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">255</span><span class="p">)</span>
    <span class="n">branch</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">255</span><span class="p">)</span>
    <span class="n">workspace</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">500</span><span class="p">)</span>
    <span class="n">job_name</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">500</span><span class="p">)</span>
    <span class="n">build_url</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">500</span><span class="p">)</span>
    <span class="n">build_num</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">255</span><span class="p">)</span>
    <span class="n">build_node</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">255</span><span class="p">)</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">db_table</span> <span class="o">=</span> <span class="s">'build_job'</span>
        <span class="n">managed</span> <span class="o">=</span> <span class="bp">False</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>执行数据迁移</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>python3 manage.py makemigrations build_info
python3 manage.py migrate build_info
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="创建序列化类">创建序列化类</h3>

<p>在build_info文件夹下新建 serializers.py 文件，该文件用来存放序列化类，管理序列化/反序列化的json数据</p>

<p>在内置类Meta，我们定义了两个属性：</p>

<ul>
  <li>model：用于序列化的模型</li>
  <li>fields：元组类型，需要序列化的字段名称</li>
</ul>

<blockquote>
  <p>id字段是Django自动生成，也需要包含在字段中</p>
</blockquote>

<blockquote>
  <p>可以通过extra_kwargs对字段进行补充说明，显示在API文档中，更加友好</p>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="kn">from</span> <span class="nn">rest_framework</span> <span class="kn">import</span> <span class="n">serializers</span> 
<span class="kn">from</span> <span class="nn">models</span> <span class="kn">import</span> <span class="n">BuildJob</span>

<span class="k">class</span> <span class="nc">BuildJobSerializer</span><span class="p">(</span><span class="n">serializers</span><span class="p">.</span><span class="n">ModelSerializer</span><span class="p">):</span>

    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
        <span class="n">model</span> <span class="o">=</span> <span class="n">BuildJob</span>
        <span class="n">fields</span> <span class="o">=</span> <span class="p">(</span><span class="s">'id'</span><span class="p">,</span> <span class="s">'project'</span><span class="p">,</span> <span class="s">'timestamp'</span><span class="p">,</span> <span class="s">'branch'</span><span class="p">,</span> <span class="s">'workspace'</span><span class="p">,</span> <span class="s">'job_name'</span><span class="p">,</span> <span class="s">'build_url'</span><span class="p">,</span> <span class="s">'build_num'</span><span class="p">,</span> <span class="s">'build_node'</span><span class="p">)</span>
        
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="配置api文档">配置API文档</h3>

<p>在工程 url.py 下 新增</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="rouge-code"><pre><span class="kn">from</span> <span class="nn">django.conf.urls</span> <span class="kn">import</span> <span class="n">include</span><span class="p">,</span> <span class="n">url</span>

<span class="kn">from</span> <span class="nn">rest_framework</span> <span class="kn">import</span> <span class="n">permissions</span>
<span class="kn">from</span> <span class="nn">drf_yasg</span> <span class="kn">import</span> <span class="n">openapi</span>
<span class="kn">from</span> <span class="nn">drf_yasg.views</span> <span class="kn">import</span> <span class="n">get_schema_view</span>

<span class="n">SchemaView</span> <span class="o">=</span> <span class="n">get_schema_view</span><span class="p">(</span>
    <span class="n">openapi</span><span class="p">.</span><span class="n">Info</span><span class="p">(</span>
        <span class="n">title</span><span class="o">=</span><span class="s">"Your Title"</span><span class="p">,</span>
        <span class="n">default_version</span><span class="o">=</span><span class="s">'v1.0'</span><span class="p">,</span>
        <span class="n">description</span><span class="o">=</span><span class="s">"""
            Your Description
        """</span><span class="p">,</span>
        <span class="n">contact</span><span class="o">=</span><span class="n">openapi</span><span class="p">.</span><span class="n">Contact</span><span class="p">(</span><span class="n">email</span><span class="o">=</span><span class="s">"Youremail@email.com"</span><span class="p">),</span>
        <span class="n">license</span><span class="o">=</span><span class="n">openapi</span><span class="p">.</span><span class="n">License</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">"BSD License"</span><span class="p">),</span>
    <span class="p">),</span>
    <span class="n">public</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="c1"># schema view本身的权限类
</span>    <span class="n">permission_classes</span><span class="o">=</span><span class="p">(</span><span class="n">permissions</span><span class="p">.</span><span class="n">AllowAny</span><span class="p">,),</span>
<span class="p">)</span>

<span class="n">urlpatterns</span> <span class="o">=</span> <span class="p">[</span>
    <span class="n">url</span><span class="p">(</span><span class="sa">r</span><span class="s">'^swagger(?P&lt;format&gt;.json|.yaml)$'</span><span class="p">,</span> <span class="n">SchemaView</span><span class="p">.</span><span class="n">without_ui</span><span class="p">(</span><span class="n">cache_timeout</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s">'schema-json'</span><span class="p">),</span>  <span class="c1"># 导出
</span>    <span class="n">url</span><span class="p">(</span><span class="sa">r</span><span class="s">'^redoc/$'</span><span class="p">,</span> <span class="n">SchemaView</span><span class="p">.</span><span class="n">with_ui</span><span class="p">(</span><span class="s">'redoc'</span><span class="p">,</span> <span class="n">cache_timeout</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s">'schema-redoc'</span><span class="p">),</span>  <span class="c1"># redoc美化UI
</span>    <span class="n">url</span><span class="p">(</span><span class="sa">r</span><span class="s">'^docs/$'</span><span class="p">,</span> <span class="n">SchemaView</span><span class="p">.</span><span class="n">with_ui</span><span class="p">(</span><span class="s">'swagger'</span><span class="p">,</span> <span class="n">cache_timeout</span><span class="o">=</span><span class="bp">None</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s">'cschema-swagger-ui'</span><span class="p">),</span>
<span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>在 build_info 文件夹下 新增 urls.py，并在工程urls.py中加入inclue</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="n">urlpatterns</span> <span class="o">=</span> <span class="p">[</span>
    <span class="n">url</span><span class="p">(</span><span class="sa">r</span><span class="s">'^api/'</span><span class="p">,</span> <span class="n">include</span><span class="p">(</span><span class="s">'build_info.urls'</span><span class="p">)),</span>
    <span class="n">url</span><span class="p">(</span><span class="sa">r</span><span class="s">'^swagger(?P&lt;format&gt;.json|.yaml)$'</span><span class="p">,</span> <span class="n">SchemaView</span><span class="p">.</span><span class="n">without_ui</span><span class="p">(</span><span class="n">cache_timeout</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s">'schema-json'</span><span class="p">),</span>  <span class="c1"># 导出
</span>    <span class="n">url</span><span class="p">(</span><span class="sa">r</span><span class="s">'^redoc/$'</span><span class="p">,</span> <span class="n">SchemaView</span><span class="p">.</span><span class="n">with_ui</span><span class="p">(</span><span class="s">'redoc'</span><span class="p">,</span> <span class="n">cache_timeout</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s">'schema-redoc'</span><span class="p">),</span>  <span class="c1"># redoc美化UI
</span>    <span class="n">url</span><span class="p">(</span><span class="sa">r</span><span class="s">'^docs/$'</span><span class="p">,</span> <span class="n">SchemaView</span><span class="p">.</span><span class="n">with_ui</span><span class="p">(</span><span class="s">'swagger'</span><span class="p">,</span> <span class="n">cache_timeout</span><span class="o">=</span><span class="bp">None</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s">'cschema-swagger-ui'</span><span class="p">),</span>
<span class="p">]</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>在 build_info 中的 views.py 新增API视图</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
</pre></td><td class="rouge-code"><pre><span class="kn">from</span> <span class="nn">drf_yasg</span> <span class="kn">import</span> <span class="n">openapi</span>
<span class="kn">from</span> <span class="nn">drf_yasg.utils</span> <span class="kn">import</span> <span class="n">swagger_auto_schema</span>
<span class="kn">from</span> <span class="nn">rest_framework.viewsets</span> <span class="kn">import</span> <span class="n">ViewSet</span>

<span class="kn">from</span> <span class="nn">.models</span> <span class="kn">import</span> <span class="n">BuildJob</span>
<span class="kn">from</span> <span class="nn">.serializers</span> <span class="kn">import</span> <span class="n">BuildJobSerializer</span>

<span class="k">class</span> <span class="nc">BuildJobView</span><span class="p">(</span><span class="n">ViewSet</span><span class="p">):</span>
    <span class="o">@</span><span class="n">swagger_auto_schema</span><span class="p">(</span>
    	<span class="c1"># API描述
</span>        <span class="n">operation_description</span><span class="o">=</span><span class="s">"list all build jobs"</span><span class="p">,</span>
        <span class="c1"># tag便于分组 summary显示信息
</span>        <span class="n">security</span><span class="o">=</span><span class="p">[],</span> <span class="n">tags</span><span class="o">=</span><span class="n">tags</span><span class="p">,</span> <span class="n">operation_summary</span><span class="o">=</span><span class="s">'列出所有构建任务'</span><span class="p">,</span>
        <span class="c1"># 定义response样式
</span>        <span class="n">responses</span><span class="o">=</span><span class="p">{</span>
            <span class="mi">200</span><span class="p">:</span> <span class="n">openapi</span><span class="p">.</span><span class="n">Response</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s">'ok'</span><span class="p">,</span> <span class="n">examples</span><span class="o">=</span><span class="p">{</span>
                <span class="s">'application/json'</span><span class="p">:</span> <span class="p">{</span>
                    <span class="s">'has_result'</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
                    <span class="s">'data'</span><span class="p">:</span> <span class="p">[</span>
                        <span class="p">{</span>
                            <span class="c1"># 定义response
</span>                        <span class="p">}</span>
                    <span class="p">]</span>
                <span class="p">}</span>
            <span class="p">})</span>
        <span class="p">}</span>
    <span class="p">)</span>
    <span class="k">def</span> <span class="nf">get_all_build_jobs</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">request</span><span class="p">):</span>
        <span class="n">jobs</span> <span class="o">=</span> <span class="n">BuildJob</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="nb">all</span><span class="p">()</span>
        <span class="k">if</span> <span class="n">jobs</span><span class="p">:</span>
        	<span class="c1"># 调用序列化类进行序列化
</span>            <span class="n">jobs_serializer</span> <span class="o">=</span> <span class="n">BuildJobSerializer</span><span class="p">(</span><span class="n">jobs</span><span class="p">,</span> <span class="n">many</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
            <span class="k">return</span> <span class="n">JsonResponse</span><span class="p">({</span><span class="s">"has_result"</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span> <span class="s">'data'</span><span class="p">:</span> <span class="n">jobs_serializer</span><span class="p">.</span><span class="n">data</span><span class="p">},</span> <span class="n">safe</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">JsonResponse</span><span class="p">({</span><span class="s">"has_result"</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span> <span class="s">'data'</span><span class="p">:</span> <span class="s">''</span><span class="p">})</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p>使用 runserver 访问 ip:端口号/redoc 查看效果</p>

<h3 id="q403-csrf-cookie-not-set-问题">Q：403 CSRF cookie not set 问题</h3>

<p>当启用 DRF 后，访问后台接口可能出现 403 CSRF cookie not set 的报错，即使将Django CSRF 中间件注释掉也无法解决，这是因为 restframework 默认采用的Session认证会强制校验 CSRF，需要在settings.py中做如下定义</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="c1"># *RestFramework采用token，避免CSRF强制验证
</span><span class="n">REST_FRAMEWORK</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'DEFAULT_AUTHENTICATION_CLASSES'</span><span class="p">:</span> <span class="p">(</span>
        <span class="s">'rest_framework.authentication.TokenAuthentication'</span><span class="p">,</span>
    <span class="p">)</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>即可正确请求API</p>

<h3 id="资料">资料</h3>

<ul>
  <li>跨域支持请参考 <a href="https://zhangxinbo20190504.github.io/2021/11/23/Django-+-Ant-Design-Vue-%E6%90%AD%E5%BB%BAweb%E5%B9%B3%E5%8F%B0/">Django + Ant Design Vue 搭建web平台</a></li>
  <li>Django DRF <a href="https://drf-yasg.readthedocs.io/en/stable/">文档</a></li>
</ul>

:ET